@model DotNetProject.Domain.Models.CreationVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>OrderModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">



            @Html.LabelFor(model => model.order.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.order.OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.OrderNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.order.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.order.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.contact == null)
        {

            <div class="form-group">
                @Html.LabelFor(model => model.order.ContactID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownListFor(m => m.contact.ID,
                   Model.contacts.Select(i => new SelectListItem { @Value = i.ID.ToString(), Text = i.FirstName + " " + i.LastName}),
                   new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.order.ContactID, "", new { @class = "text-danger" })
                </div>
            </div>
        }


        @if (Model.contact != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.order.ContactID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.order.ContactID, new { @Value = Model.contact.ID })
                    @Html.TextBoxFor(m => m.contact.FirstName, new { @Value = Model.contact.FirstName + " " + Model.contact.LastName, @readonly = "readonly" })
                </div>
            </div>
        }




        <div class="form-group">
            @Html.LabelFor(model => model.order.OrderDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.order.OrderDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.OrderDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.order.OrderAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.order.OrderAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.OrderAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
